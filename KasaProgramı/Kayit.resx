<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>